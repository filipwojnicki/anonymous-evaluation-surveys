# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AnswerFrequencyDto {
  count: Int!
  percentage: Float!
  text: String!
}

input AnswerInput {
  answer: String!
  questionId: String!
}

type AnswerOptionDto {
  id: String!
  questionId: String!
  text: String!
}

input AnswerOptionInput {
  text: String!
}

type AuthResponse {
  accessToken: String!
}

input CreateQuestionInput {
  answerOptions: [AnswerOptionInput!]
  surveyId: String!
  text: String!
  type: QuestionType!
}

input CreateSurveyDto {
  description: String
  title: String!
  tokenCount: Float!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  createQuestion(data: CreateQuestionInput!): Boolean!
  createSurvey(data: CreateSurveyDto!): SurveyDto!
  deleteQuestion(questionId: String!, surveyId: String!): Boolean!
  deleteSurvey(id: String!): Boolean!
  login(input: LoginInput!): AuthResponse!
  register(input: RegisterInput!): AuthResponse!
  submitResponse(data: SubmitSurveyResponseInput!): Boolean!
  updateQuestion(data: UpdateQuestionInput!, questionId: String!, surveyId: String!): Boolean!
  updateSurvey(data: UpdateSurveyDto!, id: String!): SurveyDto!
}

type Query {
  getQuestion(questionId: String!, surveyId: String!): QuestionDto!
  getQuestions(surveyId: String!): [QuestionDto!]!
  getRandomUnusedToken(surveyId: String!): TokenDto!
  getSurvey(id: String!): SurveyDto!
  getSurveyAnalyticsDetails(surveyId: String!): SurveyAnalyticsDetailsDto!
  getSurveyByToken(token: String!): SurveyDto!
  getSurveyTokens(surveyId: String!): [TokenDto!]!
  getSurveysAnalytics: [SurveyAnalyticsDto!]!
  getSurveysByUser: [SurveyDto!]!
  getTextAnswers(questionId: String!): [TextAnswerDto!]!
  hello: String!
}

type QuestionAnalyticsDto {
  answerFrequency: [AnswerFrequencyDto!]!
  id: String!
  text: String!
  type: String!
}

type QuestionDto {
  answerOptions: [AnswerOptionDto!]
  id: String!
  surveyId: String!
  text: String!
  type: String!
}

"""The type of question"""
enum QuestionType {
  MULTIPLE_CHOICE
  SINGLE_CHOICE
  TEXT
}

input RegisterInput {
  email: String!
  password: String!
}

input SubmitSurveyResponseInput {
  answers: [AnswerInput!]!
  token: String!
}

type SurveyAnalyticsDetailsDto {
  completionRate: Float!
  id: String!
  questions: [QuestionAnalyticsDto!]!
  responses: Int!
  title: String!
}

type SurveyAnalyticsDto {
  completionRate: Float!
  id: String!
  responses: Float!
  title: String!
}

type SurveyDto {
  createdAt: DateTime!
  creatorId: String!
  description: String
  id: String!
  questions: [QuestionDto!]
  title: String!
  updatedAt: DateTime!
}

type TextAnswerDto {
  text: String!
}

type TokenDto {
  id: String!
  surveyId: String!
  token: String!
}

input UpdateQuestionInput {
  answerOptions: [AnswerOptionInput!]
  text: String
  type: QuestionType
}

input UpdateSurveyDto {
  description: String
  title: String!
}